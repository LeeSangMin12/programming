{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uC0C1\\uBBFC\\\\Desktop\\\\programming\\\\sparta_coding\\\\SPARTA_REACT\\\\bucket_list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Route, Switch } from \"react-router-dom\"; // useDispatch를 가져와요!\n\nimport { useDispatch } from \"react-redux\"; // 액션생성함수도 가져오고요!\n\nimport { createBucket } from \"./redux/modules/bucket\"; // BucketList 컴포넌트를 import 해옵니다.\n// import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\n\nimport BucketList from \"./BucketList\";\nimport Detail from \"./Detail\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const text = React.useRef(null); // useHistory 사용하는 것과 비슷하죠? :)\n\n  const dispatch = useDispatch();\n\n  const addBucketList = () => {\n    // 스프레드 문법! 기억하고 계신가요? :)\n    // 원본 배열 list에 새로운 요소를 추가해주었습니다.\n    // 여긴 이제 주석처리!\n    // setList([...list, text.current.value]);\n    dispatch(createBucket(text.current.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"\\uB0B4 \\uBC84\\uD0B7\\uB9AC\\uC2A4\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: BucketList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/detail\",\n          component: Detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          component: NotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBucketList,\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"uSPfnj61Q9OU3r7POWm27q6ygTk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nconst Input = styled.div`\nmax-width: 350px;\nmin-height: 10vh;\nbackground-color: #fff;\npadding: 16px;\nmargin: 20px auto;\nborder-radius: 5px;\nborder: 1px solid #ddd;\n`;\n_c2 = Input;\nconst Container = styled.div`\nmax-width: 350px;\nmin-height: 60vh;\nbackground-color: #fff;\npadding: 16px;\nmargin: 20px auto;\nborder-radius: 5px;\nborder: 1px solid #ddd;\n`;\n_c3 = Container;\nconst Title = styled.h1`\ncolor: slateblue;\ntext-align: center;\n`;\n_c4 = Title;\nconst Line = styled.hr`\nmargin: 16px 0px;\nborder: 1px dotted #ddd;\n`;\n_c5 = Line;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Line\");","map":{"version":3,"sources":["C:/Users/이상민/Desktop/programming/sparta_coding/SPARTA_REACT/bucket_list/src/App.js"],"names":["React","styled","Route","Switch","useDispatch","createBucket","BucketList","Detail","NotFound","App","text","useRef","dispatch","addBucketList","current","value","Input","div","Container","Title","h1","Line","hr"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B,C,CACA;;AACA,SAAQC,WAAR,QAA0B,aAA1B,C,CACA;;AACA,SAASC,YAAT,QAA6B,wBAA7B,C,CAEA;AACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEf,QAAMC,IAAI,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAAb,CAFe,CAGf;;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,aAAa,GAAG,MAAM;AAC5B;AACA;AACA;AACA;AAEAD,IAAAA,QAAQ,CAACP,YAAY,CAACK,IAAI,CAACI,OAAL,CAAaC,KAAd,CAAb,CAAR;AACC,GAPD;;AASA,sBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA,QAAC,SAAD;AAAA,8BACA,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFA,eAKA,QAAC,MAAD;AAAA,gCAOA,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAET;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAPA,eAQA,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,SAAlB;AAA4B,UAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,gBARA,eASA,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBATA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAmBA,QAAC,KAAD;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,OAAO,EAAEG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA0BC;;GAzCQJ,G;UAIQL,W;;;KAJRK,G;AA2CT,MAAMO,KAAK,GAAGf,MAAM,CAACgB,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMD,K;AAUN,MAAME,SAAS,GAAGjB,MAAM,CAACgB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,S;AAUN,MAAMC,KAAK,GAAGlB,MAAM,CAACmB,EAAG;AACxB;AACA;AACA,CAHA;MAAMD,K;AAKN,MAAME,IAAI,GAAGpB,MAAM,CAACqB,EAAG;AACvB;AACA;AACA,CAHA;MAAMD,I;AAKN,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Route, Switch } from \"react-router-dom\";\n// useDispatch를 가져와요!\nimport {useDispatch} from \"react-redux\";\n// 액션생성함수도 가져오고요!\nimport { createBucket } from \"./redux/modules/bucket\";\n\n// BucketList 컴포넌트를 import 해옵니다.\n// import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\nimport BucketList from \"./BucketList\";\nimport Detail from \"./Detail\";\nimport NotFound from \"./NotFound\";\n\nfunction App() {\n\nconst text = React.useRef(null);\n// useHistory 사용하는 것과 비슷하죠? :)\nconst dispatch = useDispatch();\n\nconst addBucketList = () => {\n// 스프레드 문법! 기억하고 계신가요? :)\n// 원본 배열 list에 새로운 요소를 추가해주었습니다.\n// 여긴 이제 주석처리!\n// setList([...list, text.current.value]);\n\ndispatch(createBucket(text.current.value));\n};\n\nreturn (\n<div className=\"App\">\n<Container>\n<Title>내 버킷리스트</Title>\n<Line />\n{/* 컴포넌트를 넣어줍니다. */}\n{/* <컴포넌트 명 [props 명]={넘겨줄 것(리스트, 문자열, 숫자, ...)}/> */}\n<Switch>\n{/* <Route\npath=\"/\"\nexact\nrender={(props) => <BucketList list={list} />}\n/> */}\n{/* 이제는 render를 사용해서 list를 넘겨줄 필요가 없죠! 버킷리스트가 리덕스에서 데이터를 알아서 가져갈거니까요! */}\n<Route exact path=\"/\" component={BucketList} />\n<Route exact path=\"/detail\" component={Detail} />\n<Route component={NotFound} />\n</Switch>\n</Container>\n{/* 인풋박스와 추가하기 버튼을 넣어줬어요. */}\n<Input>\n<input type=\"text\" ref={text} />\n<button onClick={addBucketList}>추가하기</button>\n</Input>\n</div>\n);\n}\n\nconst Input = styled.div`\nmax-width: 350px;\nmin-height: 10vh;\nbackground-color: #fff;\npadding: 16px;\nmargin: 20px auto;\nborder-radius: 5px;\nborder: 1px solid #ddd;\n`;\n\nconst Container = styled.div`\nmax-width: 350px;\nmin-height: 60vh;\nbackground-color: #fff;\npadding: 16px;\nmargin: 20px auto;\nborder-radius: 5px;\nborder: 1px solid #ddd;\n`;\n\nconst Title = styled.h1`\ncolor: slateblue;\ntext-align: center;\n`;\n\nconst Line = styled.hr`\nmargin: 16px 0px;\nborder: 1px dotted #ddd;\n`;\n\nexport default App;"]},"metadata":{},"sourceType":"module"}