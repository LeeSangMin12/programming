{"ast":null,"code":"// bucket.js\nimport { db } from \"../../firebase\";\nimport { collection, doc, getDoc, getDocs, addDoc, updateDoc, deleteDoc } from \"firebase/firestore\"; // Actions\n\nconst LOAD = \"bucket/LOAD\";\nconst CREATE = \"bucket/CREATE\";\nconst DELETE = \"bucket/DELETE\";\nconst UPDATE = \"bucket/UPDATE\";\nconst initialState = {\n  list: [{\n    text: \"영화관 가기\",\n    completed: false\n  }, {\n    text: \"매일 책읽기\",\n    completed: false\n  }, {\n    text: \"수영 배우기\",\n    completed: false\n  }, {\n    text: \"코딩하기\",\n    completed: false\n  } // list: [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\", \"수영 배우기\"],\n  ]\n};\nexport function loadBucket(bucket_list) {\n  return {\n    type: LOAD,\n    bucket_list\n  };\n} // Action Creators\n\nexport function createBucket(bucket) {\n  return {\n    type: CREATE,\n    bucket: bucket\n  };\n}\nexport function deleteBucket(bucket_index) {\n  return {\n    type: DELETE,\n    bucket_index\n  };\n}\nexport function updateBucket(bucket_index) {\n  return {\n    type: UPDATE,\n    bucket_index\n  };\n} //middlewares\n\nexport const loadBucketFB = () => {\n  return async function (dispatch) {\n    const bucket_data = await getDocs(collection(db, \"bucket\"));\n    console.log(bucket_data);\n    let bucket_list = [];\n    bucket_data.forEach(b => {\n      console.log(b.data());\n      bucket_list.push({\n        id: b.id,\n        ...b.data()\n      });\n    });\n    console.log(bucket_list);\n    dispatch(loadBucket(bucket_list));\n  };\n};\nexport const addBucketFB = bucket => {\n  return async function (dispatch) {\n    const docRef = await addDoc(collection(db, \"bucket\"), bucket);\n\n    const _bucket = await getDoc(docRef);\n\n    console.log((await getDoc(docRef)).data());\n  };\n}; // Reducer\n// export default function reducer(state = initialState, action = {}) {\n//   switch (action.type) {\n//     case \"bucket/Create\" : {\n//       const new_bucket_list = [...state.list, action.bucket];\n//       return {list : new_bucket_list};\n//     }\n//     default:\n//       return state;\n//   }\n// }\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (action.type === \"bucket/LOAD\") {\n    return {\n      list: action.bucket_list\n    };\n  } else if (action.type === \"bucket/CREATE\") {\n    const new_bucket_list = [...state.list, action.bucket];\n    return {\n      list: new_bucket_list\n    };\n  } else if (action.type === \"bucket/DELETE\") {\n    const new_bucket_list = state.list.filter((l, idx) => {\n      return parseInt(action.bucket_index) !== idx;\n    });\n    return {\n      list: new_bucket_list\n    };\n  } else if (action.type === \"bucket/UPDATE\") {\n    const new_bucket_list = state.list.map((l, idx) => {\n      if (Number(action.bucket_index) === idx) {\n        return { ...l,\n          completed: true\n        };\n      } else {\n        return l;\n      }\n    });\n    return {\n      list: new_bucket_list\n    };\n  } else {\n    return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/이상민/Desktop/programming/sparta_coding/SPARTA_REACT/bucket_list/src/redux/modules/bucket.js"],"names":["db","collection","doc","getDoc","getDocs","addDoc","updateDoc","deleteDoc","LOAD","CREATE","DELETE","UPDATE","initialState","list","text","completed","loadBucket","bucket_list","type","createBucket","bucket","deleteBucket","bucket_index","updateBucket","loadBucketFB","dispatch","bucket_data","console","log","forEach","b","data","push","id","addBucketFB","docRef","_bucket","reducer","state","action","new_bucket_list","filter","l","idx","parseInt","map","Number"],"mappings":"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","sourcesContent":["// bucket.js\r\nimport { db } from \"../../firebase\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\n\r\n// Actions\r\nconst LOAD = \"bucket/LOAD\";\r\nconst CREATE = \"bucket/CREATE\";\r\nconst DELETE = \"bucket/DELETE\";\r\nconst UPDATE = \"bucket/UPDATE\";\r\n\r\nconst initialState = {\r\n  list: [\r\n    { text: \"영화관 가기\", completed: false },\r\n    { text: \"매일 책읽기\", completed: false },\r\n    { text: \"수영 배우기\", completed: false },\r\n    { text: \"코딩하기\", completed: false },\r\n    // list: [\"영화관 가기\", \"매일 책읽기\", \"수영 배우기\", \"수영 배우기\"],\r\n  ],\r\n};\r\nexport function loadBucket(bucket_list) {\r\n  return { type: LOAD, bucket_list };\r\n}\r\n// Action Creators\r\nexport function createBucket(bucket) {\r\n  return { type: CREATE, bucket: bucket };\r\n}\r\n\r\nexport function deleteBucket(bucket_index) {\r\n  return { type: DELETE, bucket_index };\r\n}\r\n\r\nexport function updateBucket(bucket_index) {\r\n  return { type: UPDATE, bucket_index };\r\n}\r\n\r\n//middlewares\r\nexport const loadBucketFB = () => {\r\n  return async function (dispatch) {\r\n    const bucket_data = await getDocs(collection(db, \"bucket\"));\r\n    console.log(bucket_data);\r\n\r\n    let bucket_list = [];\r\n\r\n    bucket_data.forEach((b) => {\r\n      console.log(b.data());\r\n      bucket_list.push({id:b.id,  ...b.data() });\r\n    });\r\n    console.log(bucket_list);\r\n    dispatch(loadBucket(bucket_list));\r\n  };\r\n};\r\n\r\nexport const addBucketFB = (bucket) => {\r\n  return async function(dispatch) {\r\n    const docRef = await addDoc(collection(db, \"bucket\"), bucket);\r\n    const _bucket = await getDoc(docRef);\r\n    console.log((await getDoc(docRef)).data());\r\n  }\r\n}\r\n\r\n// Reducer\r\n// export default function reducer(state = initialState, action = {}) {\r\n//   switch (action.type) {\r\n//     case \"bucket/Create\" : {\r\n//       const new_bucket_list = [...state.list, action.bucket];\r\n//       return {list : new_bucket_list};\r\n//     }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\nexport default function reducer(state = initialState, action = {}) {\r\n  if (action.type === \"bucket/LOAD\") {\r\n    return {list: action.bucket_list};\r\n  } else if (action.type === \"bucket/CREATE\") {\r\n    const new_bucket_list = [...state.list, action.bucket];\r\n    return { list: new_bucket_list };\r\n  } else if (action.type === \"bucket/DELETE\") {\r\n    const new_bucket_list = state.list.filter((l, idx) => {\r\n      return parseInt(action.bucket_index) !== idx;\r\n    });\r\n    return { list: new_bucket_list };\r\n  } else if (action.type === \"bucket/UPDATE\") {\r\n    const new_bucket_list = state.list.map((l, idx) => {\r\n      if (Number(action.bucket_index) === idx) {\r\n        return { ...l, completed: true };\r\n      } else {\r\n        return l;\r\n      }\r\n    });\r\n    return { list: new_bucket_list };\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}