{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/\\uC774\\uC0C1\\uBBFC/Desktop/programming/sparta_coding/SPARTA_REACT/bucket_list/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _asyncToGenerator from\"C:/Users/\\uC774\\uC0C1\\uBBFC/Desktop/programming/sparta_coding/SPARTA_REACT/bucket_list/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import _regeneratorRuntime from\"C:\\\\Users\\\\\\uC774\\uC0C1\\uBBFC\\\\Desktop\\\\programming\\\\sparta_coding\\\\SPARTA_REACT\\\\bucket_list\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from\"react\";import{Route,Routes,Link}from\"react-router-dom\";import styled from\"styled-components\";import{useDispatch,useSelector}from\"react-redux\";import{createBucket,loadBucketFB,addBucketFB}from\"./redux/modules/bucket\";import BucketList from\"./BucketList\";import Detail from\"./Detail\";import Progress from\"./Progress\";import NotFound from\"./NotFound\";import{db}from\"./firebase\";import{collection,doc,getDoc,getDocs,addDoc,updateDoc,deleteDoc}from\"firebase/firestore\";import Spinner from\"./Spinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// const [list, setList] = React.useState([\n//   \"영화관 가기\",\n//   \"매일 책읽기\",\n//   \"수영 배우기\",\n// ]);\nvar text=React.useRef(null);var dispatch=useDispatch();var is_loaded=useSelector(function(state){return state.bucket.is_loaded;});React.useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(loadBucketFB());case 1:case\"end\":return _context.stop();}}},_callee);})),[]);var addBucketList=function addBucketList(){// 스프레드 문법! 기억하고 계신가요? :)\n// 원본 배열 list에 새로운 요소를 추가해주었습니다.\n// setList([...list, text.current.value]);\n// dispatch(createBucket({ text: text.current.value, completed: false }));\ndispatch(addBucketFB({text:text.current.value,completed:false}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uB0B4 \\uBC84\\uD0B7\\uB9AC\\uC2A4\\uD2B8\"}),/*#__PURE__*/_jsx(Progress,{}),/*#__PURE__*/_jsx(Line,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(BucketList,{})}),/*#__PURE__*/_jsx(Route,{path:\"/detail/:index\",element:/*#__PURE__*/_jsx(Detail,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(NotFound,{})})]})]}),/*#__PURE__*/_jsxs(Input,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",ref:text}),/*#__PURE__*/_jsx(\"button\",{onClick:addBucketList,children:\"\\uCD94\\uAC00\\uD558\\uAE30\"})]}),!is_loaded&&/*#__PURE__*/_jsx(Spinner,{})]});}var Input=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  max-width: 350px;\\n  min-height: 10vh;\\n  background-color: #fff;\\n  padding: 16px;\\n  margin: 20px auto;\\n  border-radius: 5px;\\n  border: 1px solid #ddd;\\n  display: flex;\\n  & > * {\\n    padding: 5px;\\n  }\\n  & input {\\n    border: 1px solid #888;\\n    width: 70%;\\n    margin-right: 10px;\\n  }\\n\\n  & input:focus {\\n    outline: none;\\n    border: 1px solid #a673ff;\\n  }\\n\\n  & button {\\n    width: 25%;\\n    color: #fff;\\n    border: #a673ff;\\n    background: #a673ff;\\n  }\\n\"])));var Container=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  max-width: 350px;\\n  min-height: 60vh;\\n  background-color: #fff;\\n  padding: 16px;\\n  margin: 20px auto;\\n  border-radius: 5px;\\n  border: 1px solid #ddd;\\n\"])));var Title=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: slateblue;\\n  text-align: center;\\n\"])));var Line=styled.hr(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin: 16px 0px;\\n  border: 1px dotted #ddd;\\n\"])));export default App;","map":{"version":3,"sources":["C:/Users/이상민/Desktop/programming/sparta_coding/SPARTA_REACT/bucket_list/src/App.js"],"names":["React","Route","Routes","Link","styled","useDispatch","useSelector","createBucket","loadBucketFB","addBucketFB","BucketList","Detail","Progress","NotFound","db","collection","doc","getDoc","getDocs","addDoc","updateDoc","deleteDoc","Spinner","App","text","useRef","dispatch","is_loaded","state","bucket","useEffect","addBucketList","current","value","completed","Input","div","Container","Title","h1","Line","hr"],"mappings":"0mBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,IAAxB,KAAoC,kBAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,YAAT,CAAuBC,YAAvB,CAAsCC,WAAtC,KAAwD,wBAAxD,CAEA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,EAAT,KAAmB,YAAnB,CACA,OACEC,UADF,CAEEC,GAFF,CAGEC,MAHF,CAIEC,OAJF,CAKEC,MALF,CAMEC,SANF,CAOEC,SAPF,KAQO,oBARP,CASA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA;AACA;AACA;AACA;AACA,GAAMC,CAAAA,IAAI,CAAGxB,KAAK,CAACyB,MAAN,CAAa,IAAb,CAAb,CACA,GAAMC,CAAAA,QAAQ,CAAGrB,WAAW,EAA5B,CACA,GAAMsB,CAAAA,SAAS,CAAGrB,WAAW,CAAC,SAAAsB,KAAK,QAAIA,CAAAA,KAAK,CAACC,MAAN,CAAaF,SAAjB,EAAN,CAA7B,CAEA3B,KAAK,CAAC8B,SAAN,sEAAgB,mIACZJ,QAAQ,CAAClB,YAAY,EAAb,CAAR,CADY,sDAAhB,GAEG,EAFH,EAIA,GAAMuB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B;AACA;AACA;AACA;AACAL,QAAQ,CAACjB,WAAW,CAAC,CAAEe,IAAI,CAAEA,IAAI,CAACQ,OAAL,CAAaC,KAArB,CAA4BC,SAAS,CAAE,KAAvC,CAAD,CAAZ,CAAR,CACD,CAND,CAOA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,MAAC,SAAD,yBACE,KAAC,KAAD,oDADF,cAEE,KAAC,QAAD,IAFF,cAGE,KAAC,IAAD,IAHF,cAKE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,UAAD,IAAzB,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,CAA6B,OAAO,cAAE,KAAC,MAAD,IAAtC,EAFF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,QAAD,IAAzB,EAHF,GALF,GADF,cAaE,MAAC,KAAD,yBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,GAAG,CAAEV,IAAxB,EADF,cAEE,eAAQ,OAAO,CAAEO,aAAjB,sCAFF,GAbF,CAiBG,CAACJ,SAAD,eAAc,KAAC,OAAD,IAjBjB,GADF,CAqBD,CAED,GAAMQ,CAAAA,KAAK,CAAG/B,MAAM,CAACgC,GAAV,siBAAX,CA+BA,GAAMC,CAAAA,SAAS,CAAGjC,MAAM,CAACgC,GAAV,oOAAf,CAUA,GAAME,CAAAA,KAAK,CAAGlC,MAAM,CAACmC,EAAV,iHAAX,CAKA,GAAMC,CAAAA,IAAI,CAAGpC,MAAM,CAACqC,EAAV,sHAAV,CAKA,cAAelB,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport { Route, Routes, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createBucket, loadBucketFB , addBucketFB} from \"./redux/modules/bucket\";\n\nimport BucketList from \"./BucketList\";\nimport Detail from \"./Detail\";\nimport Progress from \"./Progress\";\nimport NotFound from \"./NotFound\";\nimport { db } from \"./firebase\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\nimport Spinner from \"./Spinner\";\n\nfunction App() {\n  // const [list, setList] = React.useState([\n  //   \"영화관 가기\",\n  //   \"매일 책읽기\",\n  //   \"수영 배우기\",\n  // ]);\n  const text = React.useRef(null);\n  const dispatch = useDispatch();\n  const is_loaded = useSelector(state => state.bucket.is_loaded);\n\n  React.useEffect(async () => {\n      dispatch(loadBucketFB())\n  }, []);\n\n  const addBucketList = () => {\n    // 스프레드 문법! 기억하고 계신가요? :)\n    // 원본 배열 list에 새로운 요소를 추가해주었습니다.\n    // setList([...list, text.current.value]);\n    // dispatch(createBucket({ text: text.current.value, completed: false }));\n    dispatch(addBucketFB({ text: text.current.value, completed: false }));\n  };\n  return (\n    <div className=\"App\">\n      <Container>\n        <Title>내 버킷리스트</Title>\n        <Progress />\n        <Line />\n\n        <Routes>\n          <Route path=\"/\" element={<BucketList />} />\n          <Route path=\"/detail/:index\" element={<Detail />} />\n          <Route path=\"/\" element={<NotFound />} />\n        </Routes>\n      </Container>\n\n      <Input>\n        <input type=\"text\" ref={text} />\n        <button onClick={addBucketList}>추가하기</button>\n      </Input>\n      {!is_loaded && <Spinner/>}\n    </div>\n  );\n}\n\nconst Input = styled.div`\n  max-width: 350px;\n  min-height: 10vh;\n  background-color: #fff;\n  padding: 16px;\n  margin: 20px auto;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  display: flex;\n  & > * {\n    padding: 5px;\n  }\n  & input {\n    border: 1px solid #888;\n    width: 70%;\n    margin-right: 10px;\n  }\n\n  & input:focus {\n    outline: none;\n    border: 1px solid #a673ff;\n  }\n\n  & button {\n    width: 25%;\n    color: #fff;\n    border: #a673ff;\n    background: #a673ff;\n  }\n`;\n\nconst Container = styled.div`\n  max-width: 350px;\n  min-height: 60vh;\n  background-color: #fff;\n  padding: 16px;\n  margin: 20px auto;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n`;\n\nconst Title = styled.h1`\n  color: slateblue;\n  text-align: center;\n`;\n\nconst Line = styled.hr`\n  margin: 16px 0px;\n  border: 1px dotted #ddd;\n`;\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}