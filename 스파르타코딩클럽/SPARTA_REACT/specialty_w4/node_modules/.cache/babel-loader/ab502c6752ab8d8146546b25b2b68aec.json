{"ast":null,"code":"// bucket.js\nimport { db } from \"../../firebase\";\nimport { collection, doc, getDoc, getDocs, addDoc, updateDoc, deleteDoc } from \"firebase/firestore\"; // Actions\n\nconst LOAD = \"bucket/LOAD\";\nconst CREATE = \"bucket/CREATE\";\nconst DELETE = \"bucket/DELETE\";\nconst TUPDATE = \"bucket/TUPDATE\";\nconst FUPDATE = \"bucket/FUPDATE\";\nconst LOADED = \"bucket/LOADED\";\nconst initialState = {\n  is_loaded: false,\n  list: []\n};\nexport function loadBucket(bucket_list) {\n  return {\n    type: LOAD,\n    bucket_list\n  };\n} // Action Creators\n\nexport function createBucket(bucket) {\n  return {\n    type: CREATE,\n    bucket: bucket\n  };\n}\nexport function deleteBucket(bucket_index) {\n  return {\n    type: DELETE,\n    bucket_index\n  };\n}\nexport function isLoaded(loaded) {\n  return {\n    type: LOADED,\n    loaded\n  };\n}\nexport function TupdateBucket(bucket_index) {\n  return {\n    type: TUPDATE,\n    bucket_index\n  };\n}\n_c = TupdateBucket;\nexport function FupdateBucket(bucket_index) {\n  return {\n    type: FUPDATE,\n    bucket_index\n  };\n} //middlewares\n\n_c2 = FupdateBucket;\nexport const loadBucketFB = () => {\n  return async function (dispatch) {\n    const bucket_data = await getDocs(collection(db, \"bucket\"));\n    let bucket_list = [];\n    bucket_data.forEach(b => {\n      bucket_list.push({\n        id: b.id,\n        ...b.data()\n      });\n    });\n    dispatch(loadBucket(bucket_list));\n  };\n};\nexport const addBucketFB = bucket => {\n  return async function (dispatch) {\n    dispatch(isLoaded(false));\n    const docRef = await addDoc(collection(db, \"bucket\"), bucket); // const _bucket = await getDoc(docRef);\n\n    const bucket_data = {\n      id: docRef.id,\n      ...bucket\n    };\n    dispatch(createBucket(bucket_data));\n  };\n};\nexport const trueUpdateBucketFB = bucket_id => {\n  return async function (dispatch, getState) {\n    const docRef = doc(db, \"bucket\", bucket_id);\n    await updateDoc(docRef, {\n      completed: true\n    });\n    const _bucket_list = getState().bucket.list;\n\n    const bucket_index = _bucket_list.findIndex(b => {\n      return b.id === bucket_id;\n    });\n\n    dispatch(TupdateBucket(bucket_index));\n  };\n};\nexport const falseUpdateBucketFB = bucket_id => {\n  return async function (dispatch, getState) {\n    const docRef = doc(db, \"bucket\", bucket_id);\n    await updateDoc(docRef, {\n      completed: false\n    });\n    const _bucket_list = getState().bucket.list;\n\n    const bucket_index = _bucket_list.findIndex(b => {\n      return b.id === bucket_id;\n    });\n\n    dispatch(FupdateBucket(bucket_index));\n  };\n};\nexport const deleteBucketFB = bucket_id => {\n  return async function (dispatch, getState) {\n    if (!bucket_id) {\n      window.alert(\"아이디가 없네요\");\n      return;\n    }\n\n    const docRef = doc(db, \"bucket\", bucket_id);\n    await deleteDoc(docRef);\n    const _bucket_list = getState().bucket.list;\n\n    const bucket_index = _bucket_list.findIndex(b => {\n      return b.id === bucket_id;\n    });\n\n    dispatch(deleteBucket(bucket_index));\n  };\n}; //Reducer\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (action.type === \"bucket/LOAD\") {\n    return {\n      list: action.bucket_list,\n      is_loaded: true\n    };\n  } else if (action.type === \"bucket/CREATE\") {\n    const new_bucket_list = [...state.list, action.bucket];\n    return { ...state,\n      list: new_bucket_list,\n      is_loaded: true\n    };\n  } else if (action.type === \"bucket/DELETE\") {\n    const new_bucket_list = state.list.filter((l, idx) => {\n      return parseInt(action.bucket_index) !== idx;\n    });\n    return { ...state,\n      list: new_bucket_list\n    };\n  } else if (action.type === \"bucket/TUPDATE\") {\n    state.list.map(l => {\n      console.log(...l);\n    });\n    const new_bucket_list = state.list.map((l, idx) => {\n      if (Number(action.bucket_index) === idx) {\n        return { ...l,\n          completed: true\n        };\n      } else {\n        return l;\n      }\n    });\n    return { ...state,\n      list: new_bucket_list\n    }; //  else if (action.type === \"bucket/FUPDATE\") {\n    //   const new_bucket_list = state.list.map((l, idx) => {\n    //     if (Number(action.bucket_index) === idx) {\n    //       return { ...l, completed: false };\n    //     } else {\n    //       return l;\n    //     }\n    //     return { ...state, list: new_bucket_list };\n    //   });\n  } else if (action.type === \"bucket/LOADED\") {\n    return { ...state,\n      is_loaded: action.loaded\n    };\n  } else {\n    return state;\n  }\n} // Reducer\n// export default function reducer(state = initialState, action = {}) {\n//   switch (action.type) {\n//     case \"bucket/Create\" : {\n//       const new_bucket_list = [...state.list, action.bucket];\n//       return {list : new_bucket_list};\n//     }\n//     default:\n//       return state;\n//   }\n// }\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TupdateBucket\");\n$RefreshReg$(_c2, \"FupdateBucket\");","map":{"version":3,"sources":["C:/Users/이상민/Desktop/새 폴더/programming/sparta_coding/SPARTA_REACT/specialty_w4/src/redux/modules/bucket.js"],"names":["db","collection","doc","getDoc","getDocs","addDoc","updateDoc","deleteDoc","LOAD","CREATE","DELETE","TUPDATE","FUPDATE","LOADED","initialState","is_loaded","list","loadBucket","bucket_list","type","createBucket","bucket","deleteBucket","bucket_index","isLoaded","loaded","TupdateBucket","FupdateBucket","loadBucketFB","dispatch","bucket_data","forEach","b","push","id","data","addBucketFB","docRef","trueUpdateBucketFB","bucket_id","getState","completed","_bucket_list","findIndex","falseUpdateBucketFB","deleteBucketFB","window","alert","reducer","state","action","new_bucket_list","filter","l","idx","parseInt","map","console","log","Number"],"mappings":"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","sourcesContent":["// bucket.js\r\nimport { db } from \"../../firebase\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\n\r\n// Actions\r\nconst LOAD = \"bucket/LOAD\";\r\nconst CREATE = \"bucket/CREATE\";\r\nconst DELETE = \"bucket/DELETE\";\r\nconst TUPDATE = \"bucket/TUPDATE\";\r\nconst FUPDATE = \"bucket/FUPDATE\";\r\nconst LOADED = \"bucket/LOADED\";\r\n\r\nconst initialState = {\r\n  is_loaded: false,\r\n  list: [],\r\n};\r\n\r\nexport function loadBucket(bucket_list) {\r\n  return { type: LOAD, bucket_list };\r\n}\r\n// Action Creators\r\nexport function createBucket(bucket) {\r\n  return { type: CREATE, bucket: bucket };\r\n}\r\n\r\nexport function deleteBucket(bucket_index) {\r\n  return { type: DELETE, bucket_index };\r\n}\r\n\r\nexport function isLoaded(loaded) {\r\n  return { type: LOADED, loaded };\r\n}\r\nexport function TupdateBucket(bucket_index) {\r\n  return { type: TUPDATE, bucket_index };\r\n}\r\nexport function FupdateBucket(bucket_index) {\r\n  return { type: FUPDATE, bucket_index };\r\n}\r\n\r\n//middlewares\r\nexport const loadBucketFB = () => {\r\n  return async function (dispatch) {\r\n    const bucket_data = await getDocs(collection(db, \"bucket\"));\r\n\r\n    let bucket_list = [];\r\n    bucket_data.forEach((b) => {\r\n      bucket_list.push({ id: b.id, ...b.data() });\r\n    });\r\n    dispatch(loadBucket(bucket_list));\r\n  };\r\n};\r\n\r\nexport const addBucketFB = (bucket) => {\r\n  return async function (dispatch) {\r\n    dispatch(isLoaded(false));\r\n    const docRef = await addDoc(collection(db, \"bucket\"), bucket);\r\n    // const _bucket = await getDoc(docRef);\r\n    const bucket_data = { id: docRef.id, ...bucket };\r\n\r\n    dispatch(createBucket(bucket_data));\r\n  };\r\n};\r\n\r\nexport const trueUpdateBucketFB = (bucket_id) => {\r\n  return async function (dispatch, getState) {\r\n    const docRef = doc(db, \"bucket\", bucket_id);\r\n    await updateDoc(docRef, { completed: true });\r\n\r\n    const _bucket_list = getState().bucket.list;\r\n    const bucket_index = _bucket_list.findIndex((b) => {\r\n      return b.id === bucket_id;\r\n    });\r\n\r\n    dispatch(TupdateBucket(bucket_index));\r\n  };\r\n};\r\n\r\nexport const falseUpdateBucketFB = (bucket_id) => {\r\n  return async function (dispatch, getState) {\r\n    const docRef = doc(db, \"bucket\", bucket_id);\r\n    await updateDoc(docRef, { completed: false });\r\n\r\n    const _bucket_list = getState().bucket.list;\r\n    const bucket_index = _bucket_list.findIndex((b) => {\r\n      return b.id === bucket_id;\r\n    });\r\n\r\n    dispatch(FupdateBucket(bucket_index));\r\n  };\r\n};\r\n\r\nexport const deleteBucketFB = (bucket_id) => {\r\n  return async function (dispatch, getState) {\r\n    if (!bucket_id) {\r\n      window.alert(\"아이디가 없네요\");\r\n      return;\r\n    }\r\n    const docRef = doc(db, \"bucket\", bucket_id);\r\n    await deleteDoc(docRef);\r\n\r\n    const _bucket_list = getState().bucket.list;\r\n    const bucket_index = _bucket_list.findIndex((b) => {\r\n      return b.id === bucket_id;\r\n    });\r\n\r\n    dispatch(deleteBucket(bucket_index));\r\n  };\r\n};\r\n\r\n//Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n  if (action.type === \"bucket/LOAD\") {\r\n    return { list: action.bucket_list, is_loaded: true };\r\n  } else if (action.type === \"bucket/CREATE\") {\r\n    const new_bucket_list = [...state.list, action.bucket];\r\n    return { ...state, list: new_bucket_list, is_loaded: true };\r\n  } else if (action.type === \"bucket/DELETE\") {\r\n    const new_bucket_list = state.list.filter((l, idx) => {\r\n      return parseInt(action.bucket_index) !== idx;\r\n    });\r\n    return { ...state, list: new_bucket_list };\r\n  } else if (action.type === \"bucket/TUPDATE\") {\r\n    state.list.map(l => {\r\n      console.log(...l)\r\n    })\r\n    const new_bucket_list = state.list.map((l, idx) => {\r\n      if (Number(action.bucket_index) === idx) {\r\n        return { ...l, completed: true };\r\n      } else {\r\n        return l;\r\n      }\r\n    });\r\n    return { ...state, list: new_bucket_list };\r\n  \r\n  //  else if (action.type === \"bucket/FUPDATE\") {\r\n  //   const new_bucket_list = state.list.map((l, idx) => {\r\n  //     if (Number(action.bucket_index) === idx) {\r\n  //       return { ...l, completed: false };\r\n  //     } else {\r\n  //       return l;\r\n  //     }\r\n  //     return { ...state, list: new_bucket_list };\r\n  //   });\r\n  } else if (action.type === \"bucket/LOADED\") {\r\n    return { ...state, is_loaded: action.loaded };\r\n  } else {\r\n    return state;\r\n  }\r\n}\r\n// Reducer\r\n// export default function reducer(state = initialState, action = {}) {\r\n//   switch (action.type) {\r\n//     case \"bucket/Create\" : {\r\n//       const new_bucket_list = [...state.list, action.bucket];\r\n//       return {list : new_bucket_list};\r\n//     }\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}